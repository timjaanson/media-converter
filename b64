#!/bin/bash
set -e
set -u
set -o pipefail

help() {
  echo "Usage:"
  echo "$(basename $0) [options] /path/to/input_file /path/to/output_file"
}

if [[ $# -eq 0 ]]; then
    echo "No arguments supplied!"
    help
    exit 0
fi

output_mode="b64"

while getopts 'o:h' OPTION; do
  case "$OPTION" in
  o)
    output_mode="$OPTARG"
    ;;

  h)
    help
    exit
    ;;

  *)
    help
    exit
    ;;

  esac
done
shift "$(($OPTIND - 1))"

convert() {
  encoded=$(base64 "$input_path" | tr -d '\n')
}

convert_css() {
  # otf ttf woff woff2
  font_types=("OpenType font data" "TrueType Font data" "Web Open Font Format" "Web Open Font Format (Version 2)")
  # svg png jpg gif tif webp
  image_types=("SVG Scalable Vector Graphics image" "PNG image data" "JPEG image data" "GIF image data" "TIFF image data" "RIFF (little-endian) data")
  encoded=$(base64 "$input_path")
  filetype=$(file $input_path -b | cut -d ',' -f 1)
  if [[ " ${image_types[@]} " =~ " ${filetype} " ]]; then
    case "$filetype" in

      "SVG Scalable Vector Graphics image")
        data="data:image/svg+xml;base64,$encoded"
        ;;

      "PNG image data")
        data="data:image/png;base64,$encoded"
        ;;

      "JPEG image data")
        data="data:image/jpg;base64,$encoded"
        ;;

      "GIF image data")
        data="data:image/gif;base64,$encoded"
        ;;

      "TIFF image data")
        data="data:image/tif;base64,$encoded"
        ;;

      "RIFF (little-endian) data")
        data="data:image/webp;base64,$encoded"
        ;;

    esac

    uri="url(\"$data\")"
  elif [[ " ${font_types[@]} " =~ " ${filetype} " ]]; then
    case "$filetype" in

      "OpenType font data")
        data="data:font/otf;base64,$encoded"
        uri="url(\"$data\") format(\"opentype\")"
        ;;

      "TrueType Font data")
        data="data:font/ttf;base64,$encoded"
        uri="url(\"$data\") format(\"truetype\")"
        ;;

      "Web Open Font Format")
        data="data:font/woff;base64,$encoded"
        uri="url(\"$data\") format(\"woff\")"
        ;;
      
      "Web Open Font Format (Version 2)")
        data="data:font/woff2;base64,$encoded"
        uri="url(\"$data\") format(\"woff2\")"
        ;;

    esac
  else
    echo "unsupported file type for CSS url() format: $filetype" 1>&2
    exit 1
  fi
  uri=$(echo $uri | tr -d '\n')
}

input_path="$1"
output_path="$2"

if [ -f "$input_path" ]; then
  echo "Converting $input_path"
  filename=$(basename -- "$input_path")
  if [[ $output_mode == "css" ]]; then
    convert_css
    output="$uri"
  else
    convert
    output=$encoded
  fi
  echo "$output" > "$output_path"
else
  echo "$input_path isn't a file or it doesn't exist"
fi